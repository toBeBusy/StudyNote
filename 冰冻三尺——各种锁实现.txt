1.CLH自旋锁：
	CLH锁是一个自旋锁，能确保无饥饿性，提供先来先服务的公平性。
	CLH锁也是一种基于链表的可扩展、高性能、公平的自旋锁，申请线程只在
本地变量上自旋。它不断轮询前驱的状态，如果发现前驱释放了锁就结束自旋。

	当一个线程需要获取锁时：
	1.创建一个QNode，将其中的locked设置为true表示需要获取锁
	2.线程对tail域调用getAndSet方法，使自己成为队列的尾部，同时获取一
个指向其前趋结点的引用myPred
	3.该线程就在前趋结点的locked字段上旋转，直到前趋结点释放锁。
	4.当一个线程需要释放锁时，将当前结点的locked域设置为false，同时回
收前趋结点
