1.四层网络架构：
	1)数据链路层: 以太网协议、物理地址MAC、ARP协议、RARP协议。
	2)网络层: IP、ICMP协议。
	3)运输层：TCP、UDP协议。
	4)应用层：FTP、HTTP协议。

2.在TCP/IP协议族中，网络层IP提供的是一种不可靠的服务，也就是说它只是
尽可能快地把分组从源结点送到目的结点，但是并不提供任何可靠性保证。
而另一方面，TCP在不可靠的IP层上提供了一个可靠的运输层。为了提供这种可靠
的服务，TCP采用了超时重传、发送和接收端到端的确认分组等机制。由此可见，
运输层和网络层分别负责不同的功能。

3.ICMP和IGMP是IP协议的附属协议。

4.网络层(IP)提供点到点服务，运输层(TCP和UDP)提供端到端的服务。
	互联网是网络的网络，构造互联网的共同基石是路由器，它们在IP层把网络
连在一起。
	在一个互联网上，每个接口都用IP地址来标识，尽管用户使用主机名而不是
IP地址。域名系统为主机名和IP地址之间提供动态的映射。端口号用来标识互相
通信的应用程序。服务器使用知名端口号，客户端使用临时设定的端口号。

5.IP地址包括网络号和主机号。
	A类地址：0.0.0.0到127.255.255.255
	B类地址：128.0.0.0到191.255.255.255
	C类地址：192.0.0.0到223.255.255.255
	D类地址：224.0.0.0到239.255.255.255
	E类地址：240.0.0.0到247.255.255.255

6.链路层主要目的：
	1.为IP模块发送和接收IP数据报；
	2.为ARP模块发送ARP请求和接收ARP应答；
	3.为RARP发送RARP请求和接收RARP应答。
	
7.IEEE制定了802.2/802.3和以太网的封装格式。
	802.3规定数据帧大小为38~1492字节，而以太网规定数据帧大小为46~1500字节
，必须在不足的空间插入填充(pad)字节。最大传输单元称作MTU(most transfer unit)
	CRC字段用于帧内后续字节差错的循环冗余码检验。




	第3章  IP:网际协议
	IP提供不可靠，无连接的数据报传送服务。
	不可靠：IP协议不能保证IP数据报能成功地到达目的地。IP仅提供最好的传输服务
如果发生某种错误时，IP有一个简单的错误处理算法：丢弃该数据报，然后发生ICMP消
息报给信源端。任何要求的可靠性必须由上层来提供(如TCP)。
	无连接：这个术语的意思是IP并不维护任何关于后续数据报的状态信息。每个数据
报的处理是互相独立的。这也说明，IP数据报可以不按发送顺序接收。如果一信源向相同
的信宿发送两个连续的数据报(先是A，然后是B),每个数据报都是独立地进行路由选择，
可能选择不同的路线，因此B可能在A之前到达。

	IP首部。最高位在左边，记为0bit；最低位在右边，记为31bit。4个字节的32bit
值以下面的次序传输：首先是0~7bit,其次是8~15bit,然后16~23bit,最后是24~31bit。
这种传输次序称作big endian字节序。由于TCP/IP首部中所有的 二进制整数在网络中
传输时都要求以这种次序，因此它又称作网络字节序。以其他形式存储二进制整数的机器
如little endian格式，则必须在传输数据之前吧首部转换成网络字节序。
	总长度字段是指整个IP数据报的长度，以字节为单位。利用首部长度字段和总长度
字段，就可以知道IP数据报中数据内容的起始位置和长度。由于该字段长16bit，所以IP
数据报最长可达65535字节。
	IP首部中的TTL字段为生存时间字段，设置了数据报可以经过的最多路由器数。TTL
的初始值由源主机设置(通常为32或64)，一旦经过一个处理它的路由器，它的值就减去1
。当该字段的值为0时，数据报就被丢弃，并发送ICMP报文通知源主机。
	
	
	IP可以从TCP、UDP、ICMP和IGMP接收数据报并进行发送，或者从一个网络口接收数
据报并进行发送。IP层在内存中有一个路由表。当收到一份数据报并进行发送时，它都要
对该表搜索一次。当数据报来自某个网络接口时，IP首先检查目的IP地址是否为本机的
IP地址之一或者IP广播地址。如果确实是这样，数据报就被送到由IP首部协议字段所指定
的协议模块进行处理。如果数据报的目的不是这些地址，那么如果IP层被设置为路由器的
功能，那么就对数据报进行转发；否则数据报被丢弃。

	路由表中的每一项都包含下面这些信息：
	1)目的IP地址。它既可以是一个完整的主机地址，也可以是一个网络地址，由该表中
的标志字段来指定。主机地址有一个非0的主机好，以指定某一特定的主机，而网络地址
中的主机号为0，以指定网络中的所有主机。
	2)下一站路由器的IP地址。
	3)标志。其中一个标志指明目的IP地址是网络地址还是主机地址，另一个标志指明
下一站路由器是否为真正的下一站路由器，还是一个直接相连的接口。
	4)为数据报的传输指定一个网络接口。
	IP路由选择是逐跳地进行的。从这个路由表信息可以看出，IP并不知道到达任何目
的的完整路径。所有的IP路由选择只为数据报传输提供下一站路由器的IP地址。它假定
下一站路由器比发送数据报的主机更接近目的，而且下一站路由器与该主机是直接连接
的。
	

	IP路由选择主要完成以下这些功能：
	1)搜索路由表，寻找能与目的IP地址完全匹配的表目(网络号和主机号都要匹配)。
如果找到，则把报文发送给该表目指定的下一站路由器或直接连接的网络接口(取决于
标志字段的值)。
	2)搜索路由表，寻找能与目的网络号相匹配的表目。如果能找到，则把报文发送给
该表目指定的下一站路由器或直接连接的网络接口。目的网络上的所有主机都可以通过
这个表目来处置。
	3)搜索路由表，寻找标位“默认(default)”的表目。如果找到，则把报文发送给该
表目指定的下一站路由器。
	如果上面这些步骤都没有成功，那么该数据报就不能被传送。如果不能传送的数据
报来自本机，那么一般会向生成数据报的应用程序返回一个"主机不可达"或"网络不可达"
的错误。
	完整的主机地址匹配在网络号匹配之前执行。只有当它们都失败后才选择默认路由。
默认路由，以及下一站路由器发送的ICMP间接报文，是IP路由选择机制中功能强大的特性。
我们在第9章对它们进行讨论。
	为一个网络指定一个路由器，而不必为每个主机指定一个路由器，这是IP路由选择
机制的另一个基本特性。这样做可以极大地缩小路由表的规模，比如Internet上的路由器
有只有几千个表目，而不会是超过100万个表目。


	子网掩码：子网掩码是一个32bit的值，其中值为1的bit留给网络号和子网号，为0
的bit留给主机号。






	第4章  ARP：地址解析协议
	32位的Internet地址通过ARP转换成48位以太网地址；
	48位以太网地址通过RARP转换成32位Internet地址。

	当我们敲下命令ftp bsdi时，计算机会进行如下操作：
	1)应用程序FTP客户端调用函数gethostbyname(3)把主机名(bsdi)转换成32bit的IP地址。
这个函数在DNS(域名系统)中称作解析器，我们将在第14章对它进行介绍。这个转换过程或者
使用DNS，或者在较小网络中使用一个静态的主机文件(/etc/hosts).
	2)FTP客户端请求TCP用得到的IP地址建立连接。
	3)TCP发送一个连接请求分段到远端的主机，即用上述IP地址发送一份IP数据报。
	4)如果目的主机在本地网络上(如以太网、令牌环网或点对点链接的另一端)，那么IP数据
报可以直接送到目的主机上。如果目的主机在一个远程网络上，那么就通过IP选路函数来确定
位于本地网络上的下一站路由器地址，并让它转发IP数据报。在这两种情况下，IP数据报都是
被送到位于本地网络上的一台主机或路由器。
	5)假定是一个以太网，那么发送端主机必须把32bit的IP地址变成48bit的以太网地址。从
逻辑Internet地址到对应的物理硬件地址需要进行翻译。这就是ARP的功能。
	ARP本来是用于广播网络的，有许多主机或路由器连在同一个网络上。
	6)ARP发送一份称作ARP请求的以太网数据帧给以太网上的每个主机。这个过程称作广播。
ARP请求数据帧中包含目的主机的IP地址，其意思是"如果你是这个IP地址的拥有者，请回答
你的硬件地址。"
	7)目的主机的ARP层收到这份广播报文后，识别出这是发送端在寻问它的IP地址，于是
发送一个ARP应答，这个ARP应答包含IP地址及对应的硬件地址。
	8)收到ARP应答后，使ARP进行请求――应答交换，IP数据报现在就可以传送了。
	9)发送IP数据报到目的主机。
	知道主机的IP地址并不能让内核发送一帧数据给主机，内核(如以太网络驱动程序)必须知
道目的端的硬件地址才能发送数据。ARP的功能是在32bit的IP地址和采用不同网络技术的硬件
地址之间提供动态映射。
	
	
	ARP高速缓存
	ARP高效运行的关键是由于每个主机上都有一个ARP高速缓存，这个高速缓存存放了最近
Internet地址到硬件地址之间的映射记录。高速缓存中每一项的生存时间一般为20分钟，起始
时间从被创建时开始算起。
	
	
	以太网报头中的前两个字段是以太网的源地址和目的地址。目的地址为全1的特殊地址是
广播地址。电缆上的所有以太网接口都要接收广播的数据帧。





TCP协议：
	TCP通过下列方式来提供可靠性：
	1.应用数据被分割成TCP认为最合适发送的数据块。
	2.当TCP发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。
如果不能及时收到一个确认，将重发这个报文段。
	3.当TCP收到发自TCP连接另一端的数据，它将发送一个确认。这个确认不是立即
发送，通常将推迟几分之一秒。
	4.TCP将保持它首部和数据的检验和。这是一个端到端的检验和，目的是检测数据
在传输过程中的任何变化。如果收到段的检验和有差错，TCP将丢弃这个报文段和不确
认收到此报文段。
	5.既然TCP报文段作为IP数据报来传输，而IP数据报的到达可能会失序，因此TCP
报文段的到达也可能会失序。如果必要，TCP将对收到的数据进行重新排序，将收到的
数据以正确的顺序交给应用层。
	6.既然IP数据报会发生重复，TCP的接收端必须丢弃重复的数据。
	7.TCP还能提供流量控制。TCP链接的每一方都有固定大小的缓冲空间。TCP的接收
端只允许另一端发送接收端缓冲区所能接纳的数据。这将防止较快主机致使较慢主机的
缓冲区溢出。
  
	每个TCP段都包含源端和目的端的端口号，用于寻找发端和收端应用进程，这两个
值加上IP首部中的源端IP地址和目的端IP地址唯一确定一个TCP连接。
	
	
	建立连接协议：
	1.请求端(通常称为客户)发送一个SYN段指明客户端打算连接的服务器的端口，
以及初始序号(ISN,在这个例子中为1415531521)。这个SYN段为报文段1.
	2.服务器发回包含服务器的初始序号的SYN(这个例子中为1823083521)报文段
(报文段2)作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段
进行确认。一个SYN将占用一个序号。
	3.客户端必须将确认序号设置为服务器的ISN加1对服务器的SYN报文段进行确认
(报文3)。
	client					server
			SYN  1415531521
	报文段1 ――――――――――――――――>
				<miss 1024>
				
			SYN  1823083521
			<―――――――――――――――― 报文段2
			ack 1415531522 <miss 1024>
			
			ack 1823083522
	报文段3 ―――――――――――――――――>	
	这三个报文段完成链接的建立，这个过程也称为三次握手。
	
	
	连接终止协议：
	终止一个协议要4次握手。
	client 					server
				FIN
	报文1  ――――――――――――――――>
				FIN的ack
	       <――――――――――――――――报文2
				FIN
		   <――――――――――――――――报文3
				FIN的ack
	报文4  ――――――――――――――――>

连接建立的超时：
	客户端发送3次连接请求。
	第一次立刻发送。
	第二次在第一次之后5.5――6秒内发送。
	第三次在第二次24秒之后发送。
	若第三次发送完连接之后46秒后若还没收到响应，则放弃连接，报出
connection timed out的错误。
	从第一次发送请求，到放弃连接，总时长大约76秒。
	
	
最长报文段长度：
	最大报文段长度(MSS)表示TCP传往另一端的最大块数据的长度(注意，不包
括TCP头)。当一个连接建立时，连接的双方都要通告各自的MSS。如果一方不接
收来自另一方的MSS值，则MSS就定为默认值536字节(这个默认值允许20字节的IP
首部和20字节的TCP首部以适合576字节IP数据报)	
	
	
	
	
	
	
	
	



